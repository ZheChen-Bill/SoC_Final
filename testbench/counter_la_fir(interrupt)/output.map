Archive member included to satisfy reference by file (symbol)

/opt/riscv/lib/gcc/riscv32-unknown-elf/12.1.0/libgcc.a(muldi3.o)
                              uart.elf-uart.o (__mulsi3)

Memory Configuration

Name             Origin             Length             Attributes
vexriscv_debug   0x00000000f00f0000 0x0000000000000100
dff              0x0000000000000000 0x0000000000000400
dff2             0x0000000000000400 0x0000000000000200
flash            0x0000000010000000 0x0000000001000000
mprj             0x0000000030000000 0x0000000000100000
mprjram          0x0000000038000000 0x0000000000001000
inputdata        0x0000000038001000 0x0000000000001000
outputdata       0x0000000038002000 0x0000000000001000
hk               0x0000000026000000 0x0000000000100000
csr              0x00000000f0000000 0x0000000000010000
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

                0x0000000000000000                __DYNAMIC = 0x0

.text           0x0000000010000000      0x1d0
                0x0000000010000000                _ftext = .
 *crt0*(.text)
 .text          0x0000000010000000      0x1a8 uart.elf-crt0_vex.o
                0x0000000010000000                _start
                0x0000000010000020                trap_entry
 *crt0*(.text)
 *(.text.isr)
                0x00000000100001a8                _etext = .
 .text          0x00000000100001a8       0x28 uart.elf-isr.o
                0x00000000100001a8                isr
 .text          0x00000000100001d0        0x0 uart.elf-uart.o
 .text          0x00000000100001d0        0x0 uart.elf-counter_la_uart.o

.mprj           0x00000000100001d0      0x190
 .mprj          0x00000000100001d0      0x190 uart.elf-uart.o
                0x00000000100001d0                uart_start
                0x00000000100001dc                uart_end
                0x00000000100001e8                uart_write
                0x0000000010000200                uart_write_char
                0x0000000010000244                uart_write_string
                0x0000000010000294                uart_read_char
                0x00000000100002c4                uart_read
                0x00000000100002f8                transmission

.text.startup   0x0000000010000360      0x140
 .text.startup  0x0000000010000360      0x140 uart.elf-counter_la_uart.o
                0x0000000010000360                main

.rodata         0x00000000100004a0        0x0
                0x00000000100004a0                . = ALIGN (0x8)
 *fill*         0x00000000100004a0        0x0 
                0x00000000100004a0                _frodata = .
 *(.rodata .rodata.* .gnu.linkonce.r.*)
 *(.rodata1)
                0x00000000100004a0                . = ALIGN (0x8)
                0x00000000100004a0                _erodata = .

.data           0x0000000000000000       0xe0 load address 0x00000000100004a0
                0x0000000000000000                . = ALIGN (0x8)
                0x0000000000000000                _fdata = .
 *(.data .data.* .gnu.linkonce.d.*)
 .data          0x0000000000000000        0x0 uart.elf-crt0_vex.o
 .data          0x0000000000000000        0x0 uart.elf-isr.o
 .data          0x0000000000000000       0xd4 uart.elf-uart.o
                0x0000000000000000                taps
                0x000000000000002c                A
                0x000000000000006c                B
                0x00000000000000ac                C
 .data          0x00000000000000d4        0x0 uart.elf-counter_la_uart.o
 .data          0x00000000000000d4        0x0 /opt/riscv/lib/gcc/riscv32-unknown-elf/12.1.0/libgcc.a(muldi3.o)
 *(.data1)
                0x00000000000000e0                _gp = ALIGN (0x10)
 *(.sdata .sdata.* .gnu.linkonce.s.*)
 .sdata         0x00000000000000d4        0x4 uart.elf-isr.o
                0x00000000000000d4                counter
 .sdata         0x00000000000000d8        0x4 uart.elf-uart.o
                0x00000000000000d8                data_length
                0x00000000000000e0                . = ALIGN (0x8)
 *fill*         0x00000000000000dc        0x4 
                0x00000000000000e0                _edata = .

.bss            0x00000000000000e0       0x50 load address 0x0000000010000580
                0x00000000000000e0                . = ALIGN (0x8)
                0x00000000000000e0                _fbss = .
 *(.dynsbss)
 *(.sbss .sbss.* .gnu.linkonce.sb.*)
 .sbss          0x00000000000000e0       0x10 uart.elf-uart.o
                0x00000000000000e0                startflag
                0x00000000000000e4                endflag
                0x00000000000000e8                reg_fir_x
                0x00000000000000ec                reg_fir_y
 *(.scommon)
 *(.dynbss)
 *(.bss .bss.* .gnu.linkonce.b.*)
 .bss           0x00000000000000f0        0x0 uart.elf-crt0_vex.o
 .bss           0x00000000000000f0        0x0 uart.elf-isr.o
 .bss           0x00000000000000f0       0x40 uart.elf-uart.o
                0x00000000000000f0                result
 .bss           0x0000000000000130        0x0 uart.elf-counter_la_uart.o
 .bss           0x0000000000000130        0x0 /opt/riscv/lib/gcc/riscv32-unknown-elf/12.1.0/libgcc.a(muldi3.o)
 *(COMMON)
                0x0000000000000130                . = ALIGN (0x8)
                0x0000000000000130                _ebss = .
                0x0000000000000130                _end = .

.mprjram        0x0000000038000000      0x354 load address 0x0000000010000580
                0x0000000038000000                . = ALIGN (0x8)
                0x0000000038000000                _fsram = .
 *libgcc.a:*(.text .text.*)
 .text          0x0000000038000000       0x24 /opt/riscv/lib/gcc/riscv32-unknown-elf/12.1.0/libgcc.a(muldi3.o)
                0x0000000038000000                __mulsi3
 .mprjram       0x0000000038000024      0x330 uart.elf-uart.o
                0x0000000038000024                initfir
                0x0000000038000054                ap_start
                0x0000000038000074                input
                0x0000000038000084                output
                0x0000000038000094                check_output
                0x00000000380000b0                fir
                0x0000000038000160                matmul
                0x000000003800025c                partition
                0x00000000380002d0                sort
                0x000000003800032c                qsort
                0x0000000038000350                check

.rela.dyn       0x0000000038000354        0x0 load address 0x00000000100008d4
 .rela.text     0x0000000038000354        0x0 uart.elf-crt0_vex.o

.inputdata      0x0000000038001000      0x100 load address 0x00000000100008d4
                0x0000000038001000                . = ALIGN (0x8)
                0x0000000038001000                _finputdata = .
 *libgcc.a:*(.text .text.*)
 .inputdata     0x0000000038001000      0x100 uart.elf-uart.o
                0x0000000038001000                inputsignal

.outputdata     0x0000000038002000      0x100 load address 0x00000000100009d4
                0x0000000038002000                . = ALIGN (0x8)
                0x0000000038002000                _foutputdata = .
 *libgcc.a:*(.text .text.*)
 .outputdata    0x0000000038002000      0x100 uart.elf-uart.o
                0x0000000038002000                outputsignal
                0x0000000000000600                PROVIDE (_fstack = (ORIGIN (dff2) + LENGTH (dff2)))
                0x00000000100004a0                PROVIDE (_fdata_rom = LOADADDR (.data))
                [!provide]                        PROVIDE (_edata_rom = (LOADADDR (.data) + SIZEOF (.data)))
                0x0000000038000354                PROVIDE (_esram = (ORIGIN (mprjram) + SIZEOF (.mprjram)))
                0x0000000010000580                PROVIDE (_esram_rom = LOADADDR (.mprjram))
                0x0000000038001100                PROVIDE (_inputdata = (ORIGIN (inputdata) + SIZEOF (.inputdata)))
                0x00000000100008d4                PROVIDE (_inputdata_rom = LOADADDR (.inputdata))
                0x0000000038002100                PROVIDE (_outputdata = (ORIGIN (outputdata) + SIZEOF (.outputdata)))
                0x00000000100009d4                PROVIDE (_outputdata_rom = LOADADDR (.outputdata))
LOAD uart.elf-crt0_vex.o
LOAD uart.elf-isr.o
LOAD uart.elf-uart.o
LOAD uart.elf-counter_la_uart.o
LOAD /opt/riscv/lib/gcc/riscv32-unknown-elf/12.1.0/libgcc.a
START GROUP
LOAD /opt/riscv/lib/gcc/riscv32-unknown-elf/12.1.0/../../../../riscv32-unknown-elf/lib/libc.a
LOAD /opt/riscv/lib/gcc/riscv32-unknown-elf/12.1.0/../../../../riscv32-unknown-elf/lib/libgloss.a
END GROUP
LOAD /opt/riscv/lib/gcc/riscv32-unknown-elf/12.1.0/libgcc.a
OUTPUT(uart.elf elf32-littleriscv)

.riscv.attributes
                0x0000000000000000       0x20
 .riscv.attributes
                0x0000000000000000       0x1e uart.elf-crt0_vex.o
 .riscv.attributes
                0x000000000000001e       0x20 uart.elf-isr.o
 .riscv.attributes
                0x000000000000003e       0x1c uart.elf-uart.o
 .riscv.attributes
                0x000000000000005a       0x20 uart.elf-counter_la_uart.o
 .riscv.attributes
                0x000000000000007a       0x1a /opt/riscv/lib/gcc/riscv32-unknown-elf/12.1.0/libgcc.a(muldi3.o)

.comment        0x0000000000000000       0x1b
 .comment       0x0000000000000000       0x1b uart.elf-isr.o
                                         0x1c (size before relaxing)
 .comment       0x000000000000001b       0x1c uart.elf-uart.o
 .comment       0x000000000000001b       0x1c uart.elf-counter_la_uart.o

.debug_line     0x0000000000000000     0x12f9
 .debug_line    0x0000000000000000      0x276 uart.elf-crt0_vex.o
 .debug_line    0x0000000000000276       0xfb uart.elf-isr.o
 .debug_line    0x0000000000000371      0xa8a uart.elf-uart.o
 .debug_line    0x0000000000000dfb      0x484 uart.elf-counter_la_uart.o
 .debug_line    0x000000000000127f       0x7a /opt/riscv/lib/gcc/riscv32-unknown-elf/12.1.0/libgcc.a(muldi3.o)

.debug_line_str
                0x0000000000000000      0x18e
 .debug_line_str
                0x0000000000000000       0x5c uart.elf-crt0_vex.o
 .debug_line_str
                0x000000000000005c       0x83 uart.elf-isr.o
                                        0x122 (size before relaxing)
 .debug_line_str
                0x00000000000000df        0x9 uart.elf-uart.o
                                         0xe5 (size before relaxing)
 .debug_line_str
                0x00000000000000e8       0x12 uart.elf-counter_la_uart.o
                                        0x137 (size before relaxing)
 .debug_line_str
                0x00000000000000fa       0x94 /opt/riscv/lib/gcc/riscv32-unknown-elf/12.1.0/libgcc.a(muldi3.o)

.debug_info     0x0000000000000000      0xa06
 .debug_info    0x0000000000000000       0x25 uart.elf-crt0_vex.o
 .debug_info    0x0000000000000025      0x1ae uart.elf-isr.o
 .debug_info    0x00000000000001d3      0x625 uart.elf-uart.o
 .debug_info    0x00000000000007f8      0x1df uart.elf-counter_la_uart.o
 .debug_info    0x00000000000009d7       0x2f /opt/riscv/lib/gcc/riscv32-unknown-elf/12.1.0/libgcc.a(muldi3.o)

.debug_abbrev   0x0000000000000000      0x582
 .debug_abbrev  0x0000000000000000       0x14 uart.elf-crt0_vex.o
 .debug_abbrev  0x0000000000000014      0x14d uart.elf-isr.o
 .debug_abbrev  0x0000000000000161      0x27a uart.elf-uart.o
 .debug_abbrev  0x00000000000003db      0x186 uart.elf-counter_la_uart.o
 .debug_abbrev  0x0000000000000561       0x21 /opt/riscv/lib/gcc/riscv32-unknown-elf/12.1.0/libgcc.a(muldi3.o)

.debug_aranges  0x0000000000000000      0x130
 .debug_aranges
                0x0000000000000000       0x20 uart.elf-crt0_vex.o
 .debug_aranges
                0x0000000000000020       0x20 uart.elf-isr.o
 .debug_aranges
                0x0000000000000040       0xb0 uart.elf-uart.o
 .debug_aranges
                0x00000000000000f0       0x20 uart.elf-counter_la_uart.o
 .debug_aranges
                0x0000000000000110       0x20 /opt/riscv/lib/gcc/riscv32-unknown-elf/12.1.0/libgcc.a(muldi3.o)

.debug_str      0x0000000000000000      0x36a
 .debug_str     0x0000000000000000       0x68 uart.elf-crt0_vex.o
 .debug_str     0x0000000000000068      0x111 uart.elf-isr.o
                                        0x152 (size before relaxing)
 .debug_str     0x0000000000000179      0x131 uart.elf-uart.o
                                        0x23d (size before relaxing)
 .debug_str     0x00000000000002aa       0x2c uart.elf-counter_la_uart.o
                                        0x15c (size before relaxing)
 .debug_str     0x00000000000002d6       0x94 /opt/riscv/lib/gcc/riscv32-unknown-elf/12.1.0/libgcc.a(muldi3.o)
                                         0xa9 (size before relaxing)

.debug_loclists
                0x0000000000000000      0x3fb
 .debug_loclists
                0x0000000000000000       0x46 uart.elf-isr.o
 .debug_loclists
                0x0000000000000046      0x355 uart.elf-uart.o
 .debug_loclists
                0x000000000000039b       0x60 uart.elf-counter_la_uart.o

.debug_frame    0x0000000000000000      0x274
 .debug_frame   0x0000000000000000       0x20 uart.elf-isr.o
 .debug_frame   0x0000000000000020      0x220 uart.elf-uart.o
 .debug_frame   0x0000000000000240       0x34 uart.elf-counter_la_uart.o

.debug_rnglists
                0x0000000000000000      0x122
 .debug_rnglists
                0x0000000000000000      0x10c uart.elf-uart.o
 .debug_rnglists
                0x000000000000010c       0x16 uart.elf-counter_la_uart.o
